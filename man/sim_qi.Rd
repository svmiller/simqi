% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_qi.R
\name{sim_qi}
\alias{sim_qi}
\title{Get simulations from a model object}
\usage{
sim_qi(mod, nsim = 1000, newdata, original_scale = TRUE)
}
\arguments{
\item{mod}{a model object}

\item{nsim}{number of simulations to be run, defaults to 1,000}

\item{newdata}{A data frame with a hypothetical prediction grid.
If absent, defaults to the model frame.}

\item{original_scale}{logical, defaults to TRUE. If TRUE, the ensuing
simulations are returned on their original scale. If FALSE, the ensuing
simulations are transformed to a more practical/intuitive quantity that for
now is the simulated probability. This argument is ignored in the context of
simulations on the linear model.}
}
\value{
\code{sim_qi()()} returns a data frame (as a \code{tibble}) with the
quantities of interest and identifying information about the particular
simulation number. For linear models, or simple generalized linear models
where the dependent variable is either "there" or "not there", the quantity
of interest returned is a single column (called `y`). For models where the
underlying estimation of the dependent variable is, for lack of a better
term, "multiple" (e.g. ordinal models with the basic proportional odds)
assumption), the columns returned correspond with the number of distinct
values of the outcome. For example, an ordinal model where there are five
unique values of the dependent variable will return columns `y1`, `y2`, `y3`,
`y4`, and `y5`.
}
\description{
\code{sim_qi()} is a function to simulate quantities of interest
from a regression model
}
\details{
For ordinal models, I recommend setting `original_scale` to be FALSE. The
function, underneath the hood, is actually calculating things on the level of
the probability. It's just transforming back to a logit or a probit, if that
is what you say you want.
}
\examples{

set.seed(8675309)

M1 <- lm(mpg ~ cyl + wt, mtcars)

sim_qi(M1, 10)


}
